# TKROM (MMC3), 128K PRG-ROM / 128K CHR-ROM / 8K PRG-RAM
# except cheating and only using 8KB CHR-ROM
MEMORY {
  HEADER: start=$00, size=$10, fill=yes, fillval=$00;
  ZEROPAGE: start=$10, size=$ff;
  STACK: start=$0100, size=$0100;
  OAMBUFFER: start=$0200, size=$0100;
  RAM: start=$0300, size=$0500;

  # 16 8KB PRG-ROM banks (since MMC3 can switch 8KB at a time)
  PRG00: start = $8000, size = $2000, fill = yes, define = yes;
  PRG01: start = $8000, size = $2000, fill = yes, define = yes;

  # Four banks for data
  PRG02: start = $8000, size = $2000, fill = yes, define = yes;
  PRG03: start = $8000, size = $2000, fill = yes, define = yes;
  PRG04: start = $8000, size = $2000, fill = yes, define = yes;
  PRG05: start = $8000, size = $2000, fill = yes, define = yes;

  # These four start at $a000, will be used for code
  PRG06: start = $a000, size = $2000, fill = yes, define = yes;
  PRG07: start = $a000, size = $2000, fill = yes, define = yes;
  PRG08: start = $a000, size = $2000, fill = yes, define = yes;
  PRG09: start = $a000, size = $2000, fill = yes, define = yes;

  # Four banks that are not being used
  PRG0A: start = $8000, size = $2000, fill = yes, define = yes;
  PRG0B: start = $8000, size = $2000, fill = yes, define = yes;
  PRG0C: start = $8000, size = $2000, fill = yes, define = yes;
  PRG0D: start = $8000, size = $2000, fill = yes, define = yes;

  # Last two banks combined as one, since we're using 8 + 8 + 16fixed
  PRG0E0F: start = $c000, size = $4000, fill = yes, define = yes;

  CHRROM: start=$0000, size=$2000, fill=yes, fillval=$cc;
}

SEGMENTS {
  HEADER: load=HEADER, type=ro, align=$10;
  ZEROPAGE: load=ZEROPAGE, type=zp;
  STACK: load=STACK, type=bss, optional=yes;
  OAM: load=OAMBUFFER, type=bss, optional=yes;
  BSS: load=RAM, type=bss, optional=yes;
  DMC: load=PRG0E0F, type=ro, align=64, optional=yes;
  CODE: load=PRG0E0F, type=ro, align=$0100;
  RODATA: load=PRG0E0F, type=ro, align=$0100;
  VECTORS: load=PRG0E0F, type=ro, start=$FFFA;
  CHR: load=CHRROM, type=ro, align=16, optional=yes;
}
